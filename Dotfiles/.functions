# Functions for days

md() {
  mkdir -p "$1" && cd "$1"
}

function gpp {
  local sourcefile=$1
  local targetfile=$(echo $sourcefile | sed -e 's/cpp/run/')
  g++ -std=c++11 $sourcefile -o $targetfile
}

function vigrep {
  vi $(grep -lr $1 .);
}

# Go up directories until you find artisan, then execute it
function a {
  DOTS="artisan";
  for n in {1..6}; do
    if [[ -e $DOTS ]]; then
      php $DOTS $@;
      return 1;
    else
      DOTS="../$DOTS";
    fi;
  done;
  echo "No artisan file found";
  return 0;
}

# Go up directories until you find bin/console, then execute it
function b {
  DOTS="bin/console";
  for n in {1..6}; do
    if [[ -e $DOTS ]]; then
      php $DOTS $@;
      return 1;
    else
      DOTS="../$DOTS";
    fi;
  done;
  echo "No bin/console file found";
  return 0;
}

function bcc {
  b "cache:clear" $@
}

function bdr {
  b "debug:router" $@
}

function arl {
  a "route:list" $@
}

function amf {
  a "migrate:fresh" $@
}

function illiac {

  if [[ $(ssh -t illiac) ]]; then
    ssh illiac
  else
    ssh illiac-local
  fi;
}

function gitResetToMaster {
  git reset master
  git add .
  git commit -m "$@"
  git push --force
}

if [ -x "$(command -v git)" ]; then
function gwip {
  porcelainStatus="$(git status --porcelain)"

  if [ -z "$porcelainStatus" ]
  then
    echo "No files changed"
    return 1
  fi

  commitmessage=${@:-"wip"}
  git add . \
    && git commit -m "$commitmessage" -m "$porcelainStatus" \
    && git pull \
    && git push
}

function checkout_via_branch {
  targetBranch=$1
  viaBranch=${2:-"main"}
  git checkout $viaBranch \
    && git pull \
    && git checkout -b $targetBranch
}
fi

if [ -e /Applications/PHPStorm.app ]; then
  function phpstorm() {
    dirToOpen=${@:-'.'}
    echo "Opening ${dirToOpen} in PHPStorm"
    open -na "/Applications/PhpStorm.app" --args "${dirToOpen}"
  }
fi

